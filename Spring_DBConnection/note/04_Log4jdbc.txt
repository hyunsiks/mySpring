05_Spring Encoding Filter.txt


# Spring CharacterEncodingFilter Class

        - CharacterEncodingFilter 클래스를 필터로써 등록한다 (필터는 JSP의 문법이다.)
        - 필터 매핑을 통해 어떤 URL에 필터를 적용할 것인지 결정한다.

        <filter>
                <filter-name>encodingFilter</filter-name>
                <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
                <init-param>
                        <param-name>encoding</param-name>
                        <param-value>EUC-KR</param-value>
                </init-param>
                <init-param>
                        <param-name>forceEncoding</param-name>
                        <param-value>true</param-value>
                </init-param>
        </filter>
        
        <filter-mapping>
                <filter-name>encodingFilter</filter-name>
                <url-pattern>/menu/*</url-pattern>
         </filter-mapping>
         
# 초기화 파라미터 설명

  - encoding : 어떤 캐릭터셋을 쓸 것인지 설정
  - forceEncoding : 이미 캐릭터셋이 존재하는 요청 또는 응답에 대해서 강제로 캐릭터셋을 변경할 것인지를 설정
                                          (설정하지 않을 경우 캐릭터셋이 null인 경우에만 필터에 설정한 인코딩 타입을 적용)
  
  
04_Log4jdbc.txt


# Log4jdbc

 - jdbc의 실행 로그를 자동으로 찍어주는 라이브러리
 
# Maven dependency

 <dependency>
     <groupId>org.bgee.log4jdbc-log4j2</groupId>
     <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
     <version>1.16</version>
 </dependency>

# DB연결 설정 부분의 driverClassName과 jdbcUrl을 수정 

 <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
        <property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521/XEPDB1" />
        <property name="username" value="hr" />
        <property name="password" value="1234" />
 </bean>
 
# resource 폴더에 설정파일 등록 

 - 파일명: log4jdbc.log4j2.properties
 
 - 파일내용: log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator

# logger를 등록

  dbc.sqlonly
  jdbc.sqltiming
  jdbc.audit
  jdbc.resultset
  jdbc.resultsettable
  jdbc.connection

 <logger name="jdbc.resultset">
        <level value="info"></level>
 </logger>

 <logger name="jdbc.connection">
        <level value="info"></level>
 </logger>






 
 

 
 
 
 
 
  
  
   