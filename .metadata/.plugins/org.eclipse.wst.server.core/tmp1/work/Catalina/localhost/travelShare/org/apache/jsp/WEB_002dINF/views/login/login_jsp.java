/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-08-31 12:40:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1626931046785L));
    _jspx_dependants.put("jar:file:/C:/Users/ASUS/Documents/mshyunsik/JAVA/spring-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/TravelShare/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"UTF-8\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>로그인</title>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"https://static.nid.naver.com/js/naverLogin_implicit-1.0.3.js\"\r\n");
      out.write("	charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/resources/css/login_start.css?ver=1.7\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header/top2.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- 네이버아이디로로그인 버튼 노출 영역 -->\r\n");
      out.write("	<form id=\"login\" action=\"../login\" method=\"POST\" autocomplete='off'></form>\r\n");
      out.write("	<div class=\"loing_container\"></div>\r\n");
      out.write("	<div class=\"loginBox\">\r\n");
      out.write("		<div id=\"basic_login\">\r\n");
      out.write("			<div id=\"login_text\">\r\n");
      out.write("				로그인\r\n");
      out.write("			</div>\r\n");
      out.write("				<div class=\"login_info\" id=\"email_info\">\r\n");
      out.write("					<input form=\"login\" name=\"user_email\" placeholder=\"이메일주소\" id=\"user_email\"  type=\"text\">\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"login_info\" id=\"password_info\">\r\n");
      out.write("					<input form=\"login\" name=\"user_password\" placeholder=\"비밀번호\" id=\"user_password\" type=\"password\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"login_warning\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"button\"><button form=\"login\" id=\"login_loginbtn\" value=\"로그인\"> 로그인 </button></div>\r\n");
      out.write("	\r\n");
      out.write("			<div id=\"search_box\">\r\n");
      out.write("				<a href=\"../membership/idsearch\" class=\"search_text\" id=\"id_search\"> 아이디 찾기 </a> / <a href=\"../membership/passwordsearch\" class=\"search_text\" id=\"password_search\"> 비밀번호 찾기 </a>\r\n");
      out.write("            </div>\r\n");
      out.write("			<div id=\"membership\">\r\n");
      out.write("				<a href=\"../membership/membership\" id=\"membership_text\"> 회원 가입 </a>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/loginJS/login.js\" charset=\"UTF-8\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	  $('.loginBox').css('border','1px solid black');\r\n");
      out.write("      $('.loginBox').css('width','350px');\r\n");
      out.write("      $('.loginBox').css('height','380px');\r\n");
      out.write("      $('.loginBox').css('margin','auto');\r\n");
      out.write(" 	</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
