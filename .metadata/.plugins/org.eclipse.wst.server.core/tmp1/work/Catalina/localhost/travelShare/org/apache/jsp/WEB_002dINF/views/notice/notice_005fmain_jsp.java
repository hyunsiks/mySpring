/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-08-31 12:58:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class notice_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1626931046785L));
    _jspx_dependants.put("jar:file:/C:/Users/ASUS/Documents/mshyunsik/JAVA/spring-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/TravelShare/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시물 목록</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/resources/css/notice_list.css?ver=1.45\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Two+Tone|Material+Icons+Sharp|Material+Icons+Outlined\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header/top.jsp", out, false);
      out.write("\r\n");
      out.write("		<div class=\"notice_background\"></div>\r\n");
      out.write("	  	<div class=\"notice_container\">\r\n");
      out.write("	  		<div>공지사항 게시판</div>\r\n");
      out.write("\r\n");
      out.write("		    <table id=\"notice_table\" class=\"table table-hover\">\r\n");
      out.write("		        <thead class=qna_head>\r\n");
      out.write("		          <tr>\r\n");
      out.write("		            <th class=\"text-center\">번호</th>\r\n");
      out.write("		            <th class=\"text-center\">작성자</th>\r\n");
      out.write("		            <th class=\"text-center\">제목</th>\r\n");
      out.write("		            <th class=\"text-center\">날짜</th>\r\n");
      out.write("		            <th class=\"text-center\">조회수</th>\r\n");
      out.write("		          </tr>\r\n");
      out.write("		        </thead>\r\n");
      out.write("		        <tbody class=\"notice_tbody\"></tbody>\r\n");
      out.write("	        </table>\r\n");
      out.write("	        <div class=\"notice_bottomBox\">\r\n");
      out.write("			    <div class=\"notice_paging\"></div>	\r\n");
      out.write("			    <div>\r\n");
      out.write("					<input type=\"text\" class=\"notice_searchText\" placeholder=\"제목을 검색하세요.\"/>\r\n");
      out.write("					<button class=\"notice_searchBtn\" type=\"submit\">검색</button>\r\n");
      out.write("				</div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	  	</div>\r\n");
      out.write("	  	\r\n");
      out.write("		<div class=\"notice_Popup\">\r\n");
      out.write("		   <div class=\"notice_cancel\">\r\n");
      out.write("			   <span class=\"material-icons-outlined \"> close </span>\r\n");
      out.write("		   </div>\r\n");
      out.write("		   <div class=\"notice_textContainer\">\r\n");
      out.write("		       <div>공지사항 게시판</div>\r\n");
      out.write("		       <div class=\"notice_PopupTitle\">제목~~~</div>\r\n");
      out.write("		       <hr>\r\n");
      out.write("		       <div class=\"notice_PopupTop\">\r\n");
      out.write("		           <div class=\"notice_PopupImg\">user_img</div>\r\n");
      out.write("		           <div>\r\n");
      out.write("		               <div class=\"notice_PopupId\">user_id</div>\r\n");
      out.write("<!-- 		               <hr> -->\r\n");
      out.write("		               <div class=\"notice_PopupDate\">date</div>\r\n");
      out.write("		           </div>\r\n");
      out.write("		           <div class=\"notice_cntBoard\">\r\n");
      out.write("			           <span class=\"material-icons-outlined\">\r\n");
      out.write("							visibility\r\n");
      out.write("					   </span>\r\n");
      out.write("			           <span class=\"notice_PopupCnt\">viewcnt</span>\r\n");
      out.write("		           </div>\r\n");
      out.write("		       </div>\r\n");
      out.write("		       <hr>\r\n");
      out.write("		       <div class=\"notice_PopupText\"></div>\r\n");
      out.write("		  	</div>\r\n");
      out.write("		  </div>\r\n");
      out.write("		  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer/footer.jsp", out, false);
      out.write("\r\n");
      out.write("      	<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/notice_app.js?ver=1.45\"></script>\r\n");
      out.write("<!--       <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script> -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
